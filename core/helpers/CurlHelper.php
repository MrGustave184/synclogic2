<?php
namespace Synclogic\Helpers;

class CurlHelper
{
    private $curl;
    public $result;

    /**
     * Initialize curl object
     */
    public function init()
    {
        $this->curl = curl_init();

        curl_setopt($this->curl, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1");
        curl_setopt($this->curl, CURLOPT_HEADER, false);
        curl_setopt($this->curl, CURLOPT_HTTPHEADER, array("Accept-Language: es-es,en"));
        curl_setopt($this->curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($this->curl, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($this->curl, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0);
        curl_setopt($this->curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($this->curl, CURLOPT_CONNECTTIMEOUT, 5);
        curl_setopt($this->curl, CURLOPT_TIMEOUT, 60);
        curl_setopt($this->curl, CURLOPT_AUTOREFERER, TRUE);
    }

    /**
     * Sends a get petition to a remote server
     * 
     * @param string $url
     * @param bool $follow
     * 
     * @return string Response generated by the server
     */
    public function get($url, $follow = false)
    {
        $this->init();
        curl_setopt($this->curl, CURLOPT_URL, $url);
        curl_setopt($this->curl, CURLOPT_POST, false);
        curl_setopt($this->curl, CURLOPT_HEADER, $follow);
        curl_setopt($this->curl, CURLOPT_REFERER, '');
        curl_setopt($this->curl, CURLOPT_FOLLOWLOCATION, $follow);

        $this->result = curl_exec($this->curl);

        if ($this->result === false) {
            echo curl_error($this->curl);
        }

        $this->_close();

        return $this->result;
    }

    /**
     * Sends a POST petition to the server
     * 
     * @param string $url
     * @param array $post_elements
     * @param bool $follow
     * @param bool $header
     * 
     * @return string Response generated by the server
     */
    public function post($url, $post_elements, $follow = false, $header = false)
    {
        $this->init();
        $elements = array();

        foreach ($post_elements as $name => $value) {
            $elements[] = "{$name}=" . urlencode($value);
        }

        $elements = join("&", $elements);

        curl_setopt($this->curl, CURLOPT_URL, $url);
        curl_setopt($this->curl, CURLOPT_POST, true);
        curl_setopt($this->curl, CURLOPT_REFERER, '');
        curl_setopt($this->curl, CURLOPT_HEADER, $header or $follow);
        curl_setopt($this->curl, CURLOPT_POSTFIELDS, $elements);
        curl_setopt($this->curl, CURLOPT_FOLLOWLOCATION, $follow);

        $this->result = curl_exec($this->curl);
        $this->_close();

        return $this->result;
    }

    /**
     * Downloads a binary file from a url
     * @param string $url
     * 
     * @return string
     */
    public function getBinary($url)
    {
        $this->init();

        curl_setopt($this->curl, CURLOPT_URL, $url);
        curl_setopt($this->curl, CURLOPT_BINARYTRANSFER, 1);

        $this->result = curl_exec($this->curl);
        $this->_close();

        return $this->result;
    }

    /**
     * Close connection
     */
    private function _close()
    {
        curl_close($this->curl);
    }
}
